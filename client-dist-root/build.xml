<!--
  ~ Copyright 2011 UnboundID Corp.
  ~ All Rights Reserved.
  -->

<project name="UnboundID SCIM SDK for Java Client : Client Examples"
         basedir="."
         default="all">

  <description>
    This project provides a client example that communicates with a
    Simple Cloud Identity Management (SCIM) server interface.
  </description>

  <!-- Define the amount of memory to use for forked VMs -->
  <property name="MEM" value="512M" />

  <!-- Define a number of project-wide properties. -->
  <property name="src.dir"              location="src" />
  <property name="gensrc.dir"           location="gen-src" />
  <property name="build.dir"            location="build" />
  <property name="lib.dir"              location="lib" />
  <property name="classes.dir"          location="${build.dir}/classes" />
  <property name="jaxb.dir"             location="ext/jaxb" />
  <property name="server.dir"           location="../server" />

  <!-- Define some test properties -->
  <property name="test.host"            value="localhost" />
  <property name="test.port"            value="8181" />
  <property name="test.username"        value="cn=Directory Manager" />
  <property name="test.password"        value="password" />

  <!-- Define properties used for processing SCIM schema using JAXB. -->
  <property name="schema.classes.dir" location="${build.dir}/schema" />
  <property name="schema.gensrc.dir"  location="${gensrc.dir}/schema" />
  <property name="schema.core"        location="resource/schema/scim-core.xsd" />
  <property name="schema.package"     value="com.unboundid.scim.schema" />

  <!-- Define a number of project-wide classpath values. -->
  <path id="client-jars">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- Clean up after an earlier build. -->
  <target name="clean" description="Clean up after an earlier build">
    <delete dir="${build.dir}" />
    <delete dir="${gensrc.dir}" />
  </target>

  <!-- Generate source files for the SCIM schema using JAXB. -->
  <target name="xjc-schema">

    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
      <classpath>
        <fileset dir="${jaxb.dir}">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </taskdef>

    <delete dir="${schema.gensrc.dir}" />
    <mkdir dir="${schema.gensrc.dir}"/>
    <xjc destdir="${schema.gensrc.dir}"
        removeOldOutput="yes"
        extension="false"
        package="${schema.package}"
        schema="${schema.core}"/>
  </target>

  <!-- Compile the Java source files. -->
  <target name="compile" description="Compile the Java source files"
          depends="clean,xjc-schema">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />

    <javac srcdir="${schema.gensrc.dir}" destdir="${classes.dir}"
           source="1.5" target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars"
           includeantruntime="false">
      <compilerarg value="-Xlint:all" />
    </javac>

    <javac srcdir="${src.dir}" destdir="${classes.dir}"
           source="1.5" target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars"
           includeantruntime="false">
      <compilerarg value="-Xlint:all" />
      <classpath>
        <pathelement location="${classes.dir}" />
        <path refid="client-jars"/>
      </classpath>
    </javac>
  </target>

  <!-- Runs an in-memory test server in the foreground. -->
  <target name="run-server" description="Run the in-memory test server">
    <java fork="true"
          classname="com.unboundid.scim.ldap.InMemoryServerTool">

      <classpath>
        <fileset dir="${server.dir}/lib">
          <include name="*.jar" />
        </fileset>
      </classpath>

      <jvmarg value="-Xms${MEM}" />
      <jvmarg value="-Xmx${MEM}" />
      <arg value="--useSchemaFile"/>
      <arg value="${server.dir}/resource/schema"/>
      <arg value="--port"/>
      <arg value="${test.port}"/>
      <arg value="--ldifFile"/>
      <arg value="${server.dir}/resource/ldif/spec-compat.ldif"/>
    </java>
  </target>

  <!-- Performs a basic set of tests against a running test server. -->
  <target name="test" description="Perform a basic set of tests"
          depends="compile">

    <echo message="Running tests against the SCIM server at ${test.host}:${test.port}"/>

    <java fork="true" failonerror="true"
          classname="com.unboundid.scim.wink.ClientTest">

      <classpath>
        <dirset dir="${classes.dir}"/>
        <path refid="client-jars"/>
      </classpath>

      <jvmarg value="-Dtest.username=${test.username}"/>
      <jvmarg value="-Dtest.password=${test.password}"/>
      <jvmarg value="-Dtest.host=${test.host}"/>
      <jvmarg value="-Dtest.port=${test.port}"/>

    </java>
  </target>

  <!-- Run all build targets -->
  <target name="all" description="Run all build targets"
          depends="compile,test" />

</project>
